package com.bridgelabz.fundoo_notes.service;

import java.util.ArrayList;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.stereotype.Service;

import com.bridgelabz.fundoo_notes.dto.NoteDto;
import com.bridgelabz.fundoo_notes.entity.Note;
import com.bridgelabz.fundoo_notes.entity.User;
import com.bridgelabz.fundoo_notes.exception.UserException;
import com.bridgelabz.fundoo_notes.repository.NotesRepository;
import com.bridgelabz.fundoo_notes.repository.UserRepository;
import com.bridgelabz.fundoo_notes.utility.ApiResponse;
import com.bridgelabz.fundoo_notes.utility.JwtToken;

@Service
public class NoteService implements INoteService {

	@Autowired
	ModelMapper modelMapper;

	@Autowired
	NotesRepository noteRepo;

	@Autowired
	Environment environment;

	@Autowired
	ApiResponse apiResponse;

	@Autowired
	JwtToken jwtToken;
	
	@Autowired
	UserRepository userRepo;
	
	@Override
	public ApiResponse addNote(NoteDto noteDto) {
		Note note = modelMapper.map(noteDto, Note.class);
		noteRepo.save(note);
		apiResponse = new ApiResponse(environment.getProperty("note.addedSuccessfully"), 1, null);

		return apiResponse;
	}

	@Override
	public ApiResponse postNote(String token, NoteDto noteDto) {
		String email = jwtToken.decodeToken(token);
		User user = userRepo.findByEmail(email).orElseThrow(()-> new UserException("User not Found"));
		if (user.getNotes() == null) {
			user.setNotes(new ArrayList<>());
		}
		Note note = modelMapper.map(noteDto, Note.class);
		note.setUser(user);

//		user.getNotes().add(note);
//		System.out.println("this is user " +user.toString());
		
//		userRepo.save(user);
		
		noteRepo.save(note);
		
		apiResponse = new ApiResponse(environment.getProperty("note.addedSuccessfully"), 1, null);

		return apiResponse;
	}
	
	

}
